/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./src/lib/AuthContext.tsx":
/*!*********************************!*\
  !*** ./src/lib/AuthContext.tsx ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuthContext: () => (/* binding */ useAuthContext)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./firebase */ \"./src/lib/firebase.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_firebase__WEBPACK_IMPORTED_MODULE_2__]);\n_firebase__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst AuthProvider = ({ children })=>{\n    const { user, loading } = (0,_firebase__WEBPACK_IMPORTED_MODULE_2__.useAuth)();\n    const login = async (email, password)=>{\n        const result = await (0,_firebase__WEBPACK_IMPORTED_MODULE_2__.loginUser)(email, password);\n        return {\n            success: result.success,\n            error: result.success ? undefined : result.error\n        };\n    };\n    const register = async (email, password, displayName, profileData)=>{\n        const result = await (0,_firebase__WEBPACK_IMPORTED_MODULE_2__.registerUser)(email, password, displayName, profileData);\n        return {\n            success: result.success,\n            error: result.success ? undefined : result.error\n        };\n    };\n    const logout = async ()=>{\n        const result = await (0,_firebase__WEBPACK_IMPORTED_MODULE_2__.logoutUser)();\n        return {\n            success: result.success,\n            error: result.success ? undefined : result.error\n        };\n    };\n    const value = {\n        user,\n        loading,\n        login,\n        register,\n        logout\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"D:\\\\Fitness App\\\\WEB APP\\\\src\\\\lib\\\\AuthContext.tsx\",\n        lineNumber: 50,\n        columnNumber: 10\n    }, undefined);\n};\nconst useAuthContext = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error(\"useAuthContext must be used within an AuthProvider\");\n    }\n    return context;\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGliL0F1dGhDb250ZXh0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFvRTtBQUNNO0FBb0IxRSxNQUFNTyw0QkFBY04sb0RBQWFBLENBQThCTztBQUV4RCxNQUFNQyxlQUFrRCxDQUFDLEVBQUVDLFFBQVEsRUFBRTtJQUMxRSxNQUFNLEVBQUVDLElBQUksRUFBRUMsT0FBTyxFQUFFLEdBQUdULGtEQUFPQTtJQUVqQyxNQUFNVSxRQUFRLE9BQU9DLE9BQWVDO1FBQ2xDLE1BQU1DLFNBQVMsTUFBTVosb0RBQVNBLENBQUNVLE9BQU9DO1FBQ3RDLE9BQU87WUFBRUUsU0FBU0QsT0FBT0MsT0FBTztZQUFFQyxPQUFPRixPQUFPQyxPQUFPLEdBQUdULFlBQVlRLE9BQU9FLEtBQUs7UUFBQztJQUNyRjtJQUVBLE1BQU1DLFdBQVcsT0FBT0wsT0FBZUMsVUFBa0JLLGFBQXFCQztRQUM1RSxNQUFNTCxTQUFTLE1BQU1YLHVEQUFZQSxDQUFDUyxPQUFPQyxVQUFVSyxhQUFhQztRQUNoRSxPQUFPO1lBQUVKLFNBQVNELE9BQU9DLE9BQU87WUFBRUMsT0FBT0YsT0FBT0MsT0FBTyxHQUFHVCxZQUFZUSxPQUFPRSxLQUFLO1FBQUM7SUFDckY7SUFFQSxNQUFNSSxTQUFTO1FBQ2IsTUFBTU4sU0FBUyxNQUFNVixxREFBVUE7UUFDL0IsT0FBTztZQUFFVyxTQUFTRCxPQUFPQyxPQUFPO1lBQUVDLE9BQU9GLE9BQU9DLE9BQU8sR0FBR1QsWUFBWVEsT0FBT0UsS0FBSztRQUFDO0lBQ3JGO0lBRUEsTUFBTUssUUFBUTtRQUNaWjtRQUNBQztRQUNBQztRQUNBTTtRQUNBRztJQUNGO0lBRUEscUJBQU8sOERBQUNmLFlBQVlpQixRQUFRO1FBQUNELE9BQU9BO2tCQUFRYjs7Ozs7O0FBQzlDLEVBQUU7QUFFSyxNQUFNZSxpQkFBaUI7SUFDNUIsTUFBTUMsVUFBVXhCLGlEQUFVQSxDQUFDSztJQUMzQixJQUFJbUIsWUFBWWxCLFdBQVc7UUFDekIsTUFBTSxJQUFJbUIsTUFBTTtJQUNsQjtJQUNBLE9BQU9EO0FBQ1QsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL2ZpdG5lc3Mtd2ViLWFwcC8uL3NyYy9saWIvQXV0aENvbnRleHQudHN4PzgwYjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIFJlYWN0Tm9kZSB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgdXNlQXV0aCwgbG9naW5Vc2VyLCByZWdpc3RlclVzZXIsIGxvZ291dFVzZXIgfSBmcm9tICcuL2ZpcmViYXNlJztcclxuaW1wb3J0IHsgVXNlciB9IGZyb20gJ2ZpcmViYXNlL2F1dGgnO1xyXG5cclxuLy8gRGVmaW5lIFVzZXJQcm9maWxlRGF0YSBpbnRlcmZhY2VcclxuaW50ZXJmYWNlIFVzZXJQcm9maWxlRGF0YSB7XHJcbiAgbmlja25hbWU6IHN0cmluZztcclxuICBhZ2U6IG51bWJlcjtcclxuICBnZW5kZXI6IHN0cmluZztcclxuICBoZWlnaHQ6IG51bWJlcjtcclxuICB3ZWlnaHQ6IG51bWJlcjtcclxufVxyXG5cclxuaW50ZXJmYWNlIEF1dGhDb250ZXh0VHlwZSB7XHJcbiAgdXNlcjogVXNlciB8IG51bGw7XHJcbiAgbG9hZGluZzogYm9vbGVhbjtcclxuICBsb2dpbjogKGVtYWlsOiBzdHJpbmcsIHBhc3N3b3JkOiBzdHJpbmcpID0+IFByb21pc2U8eyBzdWNjZXNzOiBib29sZWFuOyBlcnJvcj86IHN0cmluZyB9PjtcclxuICByZWdpc3RlcjogKGVtYWlsOiBzdHJpbmcsIHBhc3N3b3JkOiBzdHJpbmcsIGRpc3BsYXlOYW1lOiBzdHJpbmcsIHByb2ZpbGVEYXRhPzogVXNlclByb2ZpbGVEYXRhKSA9PiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbjsgZXJyb3I/OiBzdHJpbmcgfT47XHJcbiAgbG9nb3V0OiAoKSA9PiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbjsgZXJyb3I/OiBzdHJpbmcgfT47XHJcbn1cclxuXHJcbmNvbnN0IEF1dGhDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxBdXRoQ29udGV4dFR5cGUgfCB1bmRlZmluZWQ+KHVuZGVmaW5lZCk7XHJcblxyXG5leHBvcnQgY29uc3QgQXV0aFByb3ZpZGVyOiBSZWFjdC5GQzx7IGNoaWxkcmVuOiBSZWFjdE5vZGUgfT4gPSAoeyBjaGlsZHJlbiB9KSA9PiB7XHJcbiAgY29uc3QgeyB1c2VyLCBsb2FkaW5nIH0gPSB1c2VBdXRoKCk7XHJcblxyXG4gIGNvbnN0IGxvZ2luID0gYXN5bmMgKGVtYWlsOiBzdHJpbmcsIHBhc3N3b3JkOiBzdHJpbmcpID0+IHtcclxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGxvZ2luVXNlcihlbWFpbCwgcGFzc3dvcmQpO1xyXG4gICAgcmV0dXJuIHsgc3VjY2VzczogcmVzdWx0LnN1Y2Nlc3MsIGVycm9yOiByZXN1bHQuc3VjY2VzcyA/IHVuZGVmaW5lZCA6IHJlc3VsdC5lcnJvciB9O1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IHJlZ2lzdGVyID0gYXN5bmMgKGVtYWlsOiBzdHJpbmcsIHBhc3N3b3JkOiBzdHJpbmcsIGRpc3BsYXlOYW1lOiBzdHJpbmcsIHByb2ZpbGVEYXRhPzogVXNlclByb2ZpbGVEYXRhKSA9PiB7XHJcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZWdpc3RlclVzZXIoZW1haWwsIHBhc3N3b3JkLCBkaXNwbGF5TmFtZSwgcHJvZmlsZURhdGEpO1xyXG4gICAgcmV0dXJuIHsgc3VjY2VzczogcmVzdWx0LnN1Y2Nlc3MsIGVycm9yOiByZXN1bHQuc3VjY2VzcyA/IHVuZGVmaW5lZCA6IHJlc3VsdC5lcnJvciB9O1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGxvZ291dCA9IGFzeW5jICgpID0+IHtcclxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGxvZ291dFVzZXIoKTtcclxuICAgIHJldHVybiB7IHN1Y2Nlc3M6IHJlc3VsdC5zdWNjZXNzLCBlcnJvcjogcmVzdWx0LnN1Y2Nlc3MgPyB1bmRlZmluZWQgOiByZXN1bHQuZXJyb3IgfTtcclxuICB9O1xyXG5cclxuICBjb25zdCB2YWx1ZSA9IHtcclxuICAgIHVzZXIsXHJcbiAgICBsb2FkaW5nLFxyXG4gICAgbG9naW4sXHJcbiAgICByZWdpc3RlcixcclxuICAgIGxvZ291dFxyXG4gIH07XHJcblxyXG4gIHJldHVybiA8QXV0aENvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3ZhbHVlfT57Y2hpbGRyZW59PC9BdXRoQ29udGV4dC5Qcm92aWRlcj47XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgdXNlQXV0aENvbnRleHQgPSAoKTogQXV0aENvbnRleHRUeXBlID0+IHtcclxuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChBdXRoQ29udGV4dCk7XHJcbiAgaWYgKGNvbnRleHQgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCd1c2VBdXRoQ29udGV4dCBtdXN0IGJlIHVzZWQgd2l0aGluIGFuIEF1dGhQcm92aWRlcicpO1xyXG4gIH1cclxuICByZXR1cm4gY29udGV4dDtcclxufTsgIl0sIm5hbWVzIjpbIlJlYWN0IiwiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VBdXRoIiwibG9naW5Vc2VyIiwicmVnaXN0ZXJVc2VyIiwibG9nb3V0VXNlciIsIkF1dGhDb250ZXh0IiwidW5kZWZpbmVkIiwiQXV0aFByb3ZpZGVyIiwiY2hpbGRyZW4iLCJ1c2VyIiwibG9hZGluZyIsImxvZ2luIiwiZW1haWwiLCJwYXNzd29yZCIsInJlc3VsdCIsInN1Y2Nlc3MiLCJlcnJvciIsInJlZ2lzdGVyIiwiZGlzcGxheU5hbWUiLCJwcm9maWxlRGF0YSIsImxvZ291dCIsInZhbHVlIiwiUHJvdmlkZXIiLCJ1c2VBdXRoQ29udGV4dCIsImNvbnRleHQiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/lib/AuthContext.tsx\n");

/***/ }),

/***/ "./src/lib/debug/logger.ts":
/*!*********************************!*\
  !*** ./src/lib/debug/logger.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n// A simple logger utility for debugging Firebase operations\nconst isDebug = \"development\" !== \"production\";\nconst logger = {\n    log: (message, data)=>{\n        if (isDebug) {\n            if (data) {\n                console.log(`[NeuralFit] ${message}`, data);\n            } else {\n                console.log(`[NeuralFit] ${message}`);\n            }\n        }\n    },\n    error: (message, error)=>{\n        console.error(`[NeuralFit ERROR] ${message}`, error || \"\");\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGliL2RlYnVnL2xvZ2dlci50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsNERBQTREO0FBQzVELE1BQU1BLFVBQVVDLGtCQUF5QjtBQUVsQyxNQUFNQyxTQUFTO0lBQ3BCQyxLQUFLLENBQUNDLFNBQWlCQztRQUNyQixJQUFJTCxTQUFTO1lBQ1gsSUFBSUssTUFBTTtnQkFDUkMsUUFBUUgsR0FBRyxDQUFDLENBQUMsWUFBWSxFQUFFQyxRQUFRLENBQUMsRUFBRUM7WUFDeEMsT0FBTztnQkFDTEMsUUFBUUgsR0FBRyxDQUFDLENBQUMsWUFBWSxFQUFFQyxRQUFRLENBQUM7WUFDdEM7UUFDRjtJQUNGO0lBRUFHLE9BQU8sQ0FBQ0gsU0FBaUJHO1FBQ3ZCRCxRQUFRQyxLQUFLLENBQUMsQ0FBQyxrQkFBa0IsRUFBRUgsUUFBUSxDQUFDLEVBQUVHLFNBQVM7SUFDekQ7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZml0bmVzcy13ZWItYXBwLy4vc3JjL2xpYi9kZWJ1Zy9sb2dnZXIudHM/MTdhOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBIHNpbXBsZSBsb2dnZXIgdXRpbGl0eSBmb3IgZGVidWdnaW5nIEZpcmViYXNlIG9wZXJhdGlvbnNcclxuY29uc3QgaXNEZWJ1ZyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbic7XHJcblxyXG5leHBvcnQgY29uc3QgbG9nZ2VyID0ge1xyXG4gIGxvZzogKG1lc3NhZ2U6IHN0cmluZywgZGF0YT86IGFueSkgPT4ge1xyXG4gICAgaWYgKGlzRGVidWcpIHtcclxuICAgICAgaWYgKGRhdGEpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhgW05ldXJhbEZpdF0gJHttZXNzYWdlfWAsIGRhdGEpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGBbTmV1cmFsRml0XSAke21lc3NhZ2V9YCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9LFxyXG4gIFxyXG4gIGVycm9yOiAobWVzc2FnZTogc3RyaW5nLCBlcnJvcj86IGFueSkgPT4ge1xyXG4gICAgY29uc29sZS5lcnJvcihgW05ldXJhbEZpdCBFUlJPUl0gJHttZXNzYWdlfWAsIGVycm9yIHx8ICcnKTtcclxuICB9XHJcbn07ICJdLCJuYW1lcyI6WyJpc0RlYnVnIiwicHJvY2VzcyIsImxvZ2dlciIsImxvZyIsIm1lc3NhZ2UiLCJkYXRhIiwiY29uc29sZSIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/lib/debug/logger.ts\n");

/***/ }),

/***/ "./src/lib/firebase.ts":
/*!*****************************!*\
  !*** ./src/lib/firebase.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   calculateCaloriesBurned: () => (/* binding */ calculateCaloriesBurned),\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   getUserProfile: () => (/* binding */ getUserProfile),\n/* harmony export */   getUserWorkouts: () => (/* binding */ getUserWorkouts),\n/* harmony export */   loginUser: () => (/* binding */ loginUser),\n/* harmony export */   logoutUser: () => (/* binding */ logoutUser),\n/* harmony export */   registerUser: () => (/* binding */ registerUser),\n/* harmony export */   saveUserProfile: () => (/* binding */ saveUserProfile),\n/* harmony export */   saveWorkoutToFirestore: () => (/* binding */ saveWorkoutToFirestore),\n/* harmony export */   updateFitnessLevel: () => (/* binding */ updateFitnessLevel),\n/* harmony export */   updateUserProfile: () => (/* binding */ updateUserProfile),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ \"firebase/app\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/auth */ \"firebase/auth\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/firestore */ \"firebase/firestore\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _debug_logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./debug/logger */ \"./src/lib/debug/logger.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([firebase_app__WEBPACK_IMPORTED_MODULE_0__, firebase_auth__WEBPACK_IMPORTED_MODULE_1__, firebase_firestore__WEBPACK_IMPORTED_MODULE_2__]);\n([firebase_app__WEBPACK_IMPORTED_MODULE_0__, firebase_auth__WEBPACK_IMPORTED_MODULE_1__, firebase_firestore__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n// Helper functions for calorie calculations\nfunction calculateBMR(weight, height, age, gender) {\n    // Mifflin-St Jeor Equation\n    if (gender.toLowerCase() === \"male\") {\n        return 10 * weight + 6.25 * height - 5 * age + 5;\n    } else {\n        return 10 * weight + 6.25 * height - 5 * age - 161;\n    }\n}\nfunction getAverageBMR(gender) {\n    // Average BMR values based on gender\n    return gender.toLowerCase() === \"male\" ? 1600 : 1400;\n}\nfunction calculatePersonalizedCalorieFactor(profile) {\n    // Calculate BMR using Mifflin-St Jeor\n    const bmr = calculateBMR(profile.weight, profile.height, profile.age, profile.gender);\n    // Base factor from BMR (normalized around average BMR)\n    const baseBMRFactor = bmr / getAverageBMR(profile.gender);\n    // Age factor (gradually reduces with age)\n    const ageFactor = Math.max(0.85, 1 - (profile.age - 30) * 0.003);\n    // BMI adjustment\n    const bmi = profile.weight / Math.pow(profile.height / 100, 2);\n    const bmiAdjustment = 1 + (bmi - 22) * 0.01;\n    // Fitness level factor (starts at 1.0, adjusts over time)\n    const fitnessLevelFactor = 1 + (profile.fitnessLevel || 0) * 0.02;\n    return baseBMRFactor * ageFactor * bmiAdjustment * fitnessLevelFactor;\n}\n// Update fitness level after completing a workout\nconst updateFitnessLevel = async (userId, currentFitnessLevel = 0)=>{\n    try {\n        const fitnessLevelIncrease = 0.1; // Small increment per workout\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(db, \"userProfiles\", userId), {\n            fitnessLevel: Math.min(10, currentFitnessLevel + fitnessLevelIncrease),\n            lastUpdate: new Date().toISOString()\n        });\n        return {\n            success: true\n        };\n    } catch (error) {\n        _debug_logger__WEBPACK_IMPORTED_MODULE_4__.logger.error(\"Failed to update fitness level\", error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// Your Firebase configuration\n// Replace these values with your own Firebase project configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBDNoAH0YumicJHPKMYsMduo5ZpfUXH8Xg\",\n    authDomain: \"webapp-1522.firebaseapp.com\",\n    databaseURL: \"https://webapp-1522-default-rtdb.firebaseio.com\",\n    projectId: \"webapp-1522\",\n    storageBucket: \"webapp-1522.firebasestorage.app\",\n    messagingSenderId: \"965223887227\",\n    appId: \"1:965223887227:web:e0ba99340c7dcb4a724dde\",\n    measurementId: \"G-E75YNZKC65\"\n};\n// Initialize Firebase\n_debug_logger__WEBPACK_IMPORTED_MODULE_4__.logger.log(\"Initializing Firebase...\");\n// Check if Firebase app is already initialized to prevent multiple instances\n// This is particularly important in Next.js which can cause multiple initializations\nlet app;\ntry {\n    const apps = (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)();\n    if (apps.length === 0) {\n        _debug_logger__WEBPACK_IMPORTED_MODULE_4__.logger.log(\"No Firebase app instance found, initializing a new one\");\n        app = (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)(firebaseConfig);\n    } else {\n        _debug_logger__WEBPACK_IMPORTED_MODULE_4__.logger.log(\"Firebase app already initialized, reusing existing instance\");\n        app = apps[0];\n    }\n} catch (error) {\n    _debug_logger__WEBPACK_IMPORTED_MODULE_4__.logger.error(\"Error during Firebase initialization:\", error);\n    // Fall back to normal initialization\n    app = (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)(firebaseConfig);\n}\nconst auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.getAuth)(app);\nconst db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getFirestore)(app);\n_debug_logger__WEBPACK_IMPORTED_MODULE_4__.logger.log(\"Firebase initialized\", {\n    authInitialized: !!auth,\n    dbInitialized: !!db\n});\n// Auth functions\nconst registerUser = async (email, password, displayName, profileData)=>{\n    try {\n        _debug_logger__WEBPACK_IMPORTED_MODULE_4__.logger.log(`Registering user with email: ${email}`);\n        const userCredential = await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.createUserWithEmailAndPassword)(auth, email, password);\n        const user = userCredential.user;\n        _debug_logger__WEBPACK_IMPORTED_MODULE_4__.logger.log(`User registered successfully with UID: ${user.uid}`);\n        try {\n            // Create user document\n            _debug_logger__WEBPACK_IMPORTED_MODULE_4__.logger.log(`Creating user document in Firestore for UID: ${user.uid}`);\n            const userData = {\n                email,\n                displayName,\n                createdAt: new Date().toISOString(),\n                workouts: [],\n                calorieMultiplier: 1.0,\n                fitnessLevel: 0,\n                lastCalorieFactorUpdate: new Date().toISOString()\n            };\n            // Create user profile with provided data or defaults\n            const userProfileData = profileData ? {\n                ...profileData,\n                updatedAt: new Date().toISOString(),\n                calorieMultiplier: 1.0,\n                fitnessLevel: 0,\n                lastCalorieFactorUpdate: new Date().toISOString()\n            } : {\n                nickname: displayName,\n                age: 30,\n                gender: \"prefer-not-to-say\",\n                height: 170,\n                weight: 70,\n                updatedAt: new Date().toISOString(),\n                calorieMultiplier: 1.0,\n                fitnessLevel: 0,\n                lastCalorieFactorUpdate: new Date().toISOString()\n            };\n            // If profile data is provided, calculate personalized calorie factor\n            if (profileData) {\n                userProfileData.calorieMultiplier = calculatePersonalizedCalorieFactor({\n                    ...userProfileData,\n                    updatedAt: new Date().toISOString()\n                });\n            }\n            // Save both documents\n            const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(db, \"users\", user.uid);\n            const userProfileRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(db, \"userProfiles\", user.uid);\n            await Promise.all([\n                (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.setDoc)(userRef, userData),\n                (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.setDoc)(userProfileRef, userProfileData)\n            ]);\n            _debug_logger__WEBPACK_IMPORTED_MODULE_4__.logger.log(\"User documents created successfully\");\n            return {\n                success: true,\n                user\n            };\n        } catch (firestoreError) {\n            _debug_logger__WEBPACK_IMPORTED_MODULE_4__.logger.error(\"Failed to create user documents in Firestore\", firestoreError);\n            // Still return success since the user was created in Authentication\n            return {\n                success: true,\n                user,\n                warning: \"User registered but profile data could not be saved. Please update your profile.\"\n            };\n        }\n    } catch (error) {\n        _debug_logger__WEBPACK_IMPORTED_MODULE_4__.logger.error(\"Registration failed\", error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\nconst loginUser = async (email, password)=>{\n    try {\n        const userCredential = await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.signInWithEmailAndPassword)(auth, email, password);\n        return {\n            success: true,\n            user: userCredential.user\n        };\n    } catch (error) {\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\nconst logoutUser = async ()=>{\n    try {\n        await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.signOut)(auth);\n        return {\n            success: true\n        };\n    } catch (error) {\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// User profile functions\nconst saveUserProfile = async (userId, profileData)=>{\n    try {\n        _debug_logger__WEBPACK_IMPORTED_MODULE_4__.logger.log(`Saving user profile for UID: ${userId}`);\n        const userProfileRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(db, \"userProfiles\", userId);\n        // Calculate the personalized calorie factor\n        const calorieMultiplier = calculatePersonalizedCalorieFactor({\n            ...profileData,\n            updatedAt: new Date().toISOString(),\n            fitnessLevel: 0\n        });\n        const data = {\n            ...profileData,\n            updatedAt: new Date().toISOString(),\n            calorieMultiplier,\n            fitnessLevel: 0,\n            lastCalorieFactorUpdate: new Date().toISOString()\n        };\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.setDoc)(userProfileRef, data, {\n            merge: true\n        });\n        _debug_logger__WEBPACK_IMPORTED_MODULE_4__.logger.log(\"User profile saved successfully\");\n        return {\n            success: true\n        };\n    } catch (error) {\n        _debug_logger__WEBPACK_IMPORTED_MODULE_4__.logger.error(\"Failed to save user profile\", error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\nconst getUserProfile = async (userId)=>{\n    try {\n        const profileDoc = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(db, \"userProfiles\", userId));\n        if (profileDoc.exists()) {\n            return {\n                success: true,\n                profile: profileDoc.data()\n            };\n        } else {\n            return {\n                success: false,\n                error: \"Profile not found\",\n                profile: null\n            };\n        }\n    } catch (error) {\n        console.error(\"Error getting user profile:\", error);\n        return {\n            success: false,\n            error: error.message,\n            profile: null\n        };\n    }\n};\nconst updateUserProfile = async (userId, profileUpdates)=>{\n    try {\n        const userProfileRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(db, \"userProfiles\", userId);\n        const userProfileDoc = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDoc)(userProfileRef);\n        if (userProfileDoc.exists()) {\n            const userProfile = userProfileDoc.data();\n            const updatedProfile = {\n                ...userProfile,\n                ...profileUpdates,\n                updatedAt: new Date().toISOString()\n            };\n            // Recalculate calorie multiplier when profile changes\n            updatedProfile.calorieMultiplier = calculatePersonalizedCalorieFactor(updatedProfile);\n            updatedProfile.lastCalorieFactorUpdate = new Date().toISOString();\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)(userProfileRef, updatedProfile);\n            _debug_logger__WEBPACK_IMPORTED_MODULE_4__.logger.log(\"User profile updated successfully\");\n            return {\n                success: true\n            };\n        } else {\n            throw new Error(\"User profile not found\");\n        }\n    } catch (error) {\n        _debug_logger__WEBPACK_IMPORTED_MODULE_4__.logger.error(\"Failed to update user profile\", error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// Custom hook for auth state\nconst useAuth = ()=>{\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(true);\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        const unsubscribe = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.onAuthStateChanged)(auth, (currentUser)=>{\n            setUser(currentUser);\n            setLoading(false);\n        });\n        return unsubscribe;\n    }, []);\n    return {\n        user,\n        loading\n    };\n};\n// Firestore functions for workout data\nconst saveWorkoutToFirestore = async (userId, date, results, summaryData)=>{\n    try {\n        console.log(\"[Firebase] Starting to save workout to Firestore for user:\", userId);\n        console.log(\"[Firebase] Workout data:\", {\n            date,\n            resultsCount: results.length,\n            summaryData\n        });\n        // Validate inputs\n        if (!userId) throw new Error(\"User ID is required\");\n        if (!date) throw new Error(\"Date is required\");\n        if (!results || !Array.isArray(results)) throw new Error(\"Results must be an array\");\n        if (results.length === 0) throw new Error(\"Results array cannot be empty\");\n        // Check if Firebase is properly initialized\n        if (!db) {\n            console.error(\"[Firebase] Firestore not initialized!\");\n            throw new Error(\"Firebase database not initialized\");\n        }\n        // Test database connectivity\n        try {\n            console.log(\"[Firebase] Testing database connectivity...\");\n            const testRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(db, \"connectionTest\", \"test\");\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.setDoc)(testRef, {\n                timestamp: new Date().toISOString()\n            }, {\n                merge: true\n            });\n            console.log(\"[Firebase] Database connection successful\");\n        } catch (connError) {\n            console.error(\"[Firebase] Database connection test failed:\", connError);\n            throw new Error(`Database connection failed: ${connError.message}`);\n        }\n        // Get user profile to apply calorie multiplier\n        console.log(\"[Firebase] Fetching user profile...\");\n        const profileResult = await getUserProfile(userId);\n        console.log(\"[Firebase] User profile fetch result:\", profileResult.success);\n        const calorieMultiplier = profileResult.success && profileResult.profile ? profileResult.profile.calorieMultiplier || 1.0 : 1.0;\n        console.log(\"[Firebase] Using calorie multiplier:\", calorieMultiplier);\n        // Apply calorie multiplier to each exercise result\n        console.log(\"[Firebase] Applying calorie multiplier to results\");\n        const resultsWithCalories = results.map((result)=>{\n            if (result.caloriesBurned) {\n                return {\n                    ...result,\n                    caloriesBurned: Math.round(result.caloriesBurned * calorieMultiplier)\n                };\n            }\n            return result;\n        });\n        // Generate a unique workout ID if not provided\n        const workoutId = summaryData?.workoutId || `${date}-${Date.now()}`;\n        console.log(\"[Firebase] Using workout ID:\", workoutId);\n        // Prepare the workout data with optional summary\n        const workoutData = {\n            date,\n            workoutId,\n            results: resultsWithCalories,\n            lastUpdated: new Date().toISOString()\n        };\n        // Add summary data if provided\n        if (summaryData) {\n            workoutData.summary = {\n                totalCaloriesBurned: Math.round(summaryData.totalCaloriesBurned * calorieMultiplier),\n                durationSeconds: summaryData.durationSeconds,\n                durationFormatted: formatDuration(summaryData.durationSeconds)\n            };\n        }\n        // Try a different approach - write directly to a workout collection\n        try {\n            console.log(\"[Firebase] Trying direct workout save approach...\");\n            // Create a workout document in a workouts collection\n            const workoutRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(db, \"workouts\", workoutId);\n            const fullWorkoutData = {\n                ...workoutData,\n                userId,\n                createdAt: new Date().toISOString()\n            };\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.setDoc)(workoutRef, fullWorkoutData);\n            console.log(\"[Firebase] Successfully saved workout directly to workouts collection\");\n            // Also create a user-workouts reference\n            const userWorkoutRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(db, `users/${userId}/workouts`, workoutId);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.setDoc)(userWorkoutRef, fullWorkoutData);\n            console.log(\"[Firebase] Successfully saved workout to user workouts subcollection\");\n            // Update the user's fitness level\n            if (profileResult.success && profileResult.profile) {\n                try {\n                    console.log(\"[Firebase] Updating fitness level\");\n                    await updateFitnessLevel(userId, profileResult.profile.fitnessLevel || 0);\n                    console.log(\"[Firebase] Fitness level updated\");\n                } catch (fitnessError) {\n                    console.warn(\"[Firebase] Error updating fitness level (non-critical):\", fitnessError);\n                }\n            }\n            return {\n                success: true,\n                workoutId\n            };\n        } catch (directSaveError) {\n            console.error(\"[Firebase] Direct save failed, falling back to user document update:\", directSaveError);\n        // Continue to the original approach below\n        }\n        console.log(\"[Firebase] Getting user document...\");\n        const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(db, \"users\", userId);\n        // Retry mechanism for Firestore operations\n        let retries = 0;\n        const maxRetries = 3;\n        let userDoc;\n        while(retries < maxRetries){\n            try {\n                userDoc = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDoc)(userRef);\n                break;\n            } catch (error) {\n                retries++;\n                console.warn(`[Firebase] Error getting user document (attempt ${retries}/${maxRetries}):`, error);\n                if (retries >= maxRetries) throw error;\n                // Wait before retrying\n                await new Promise((resolve)=>setTimeout(resolve, 1000));\n            }\n        }\n        if (!userDoc || !userDoc.exists()) {\n            console.error(\"[Firebase] User document not found for ID:\", userId);\n            // As a fallback, try to create the document if it doesn't exist\n            try {\n                console.log(\"[Firebase] Attempting to create user document as fallback\");\n                await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.setDoc)(userRef, {\n                    workouts: [\n                        workoutData\n                    ],\n                    createdAt: new Date().toISOString(),\n                    updatedAt: new Date().toISOString()\n                });\n                console.log(\"[Firebase] Successfully created user document with workout data\");\n                return {\n                    success: true,\n                    workoutId\n                };\n            } catch (createError) {\n                console.error(\"[Firebase] Failed to create fallback user document:\", createError);\n                throw new Error(\"User document not found and could not be created\");\n            }\n        }\n        console.log(\"[Firebase] User document exists, proceeding to update\");\n        const userData = userDoc.data();\n        const workouts = userData.workouts || [];\n        // Check if workout for this date exists\n        const existingWorkoutIndex = workouts.findIndex((w)=>w.workoutId === workoutId);\n        if (existingWorkoutIndex !== -1) {\n            // Update existing workout\n            console.log(\"[Firebase] Updating existing workout with ID:\", workoutId);\n            workouts[existingWorkoutIndex] = workoutData;\n        } else {\n            // Add new workout\n            console.log(\"[Firebase] Adding new workout with ID:\", workoutId);\n            workouts.push(workoutData);\n        }\n        try {\n            // Update user document\n            console.log(\"[Firebase] Updating user document with workout data...\");\n            // Use a transaction to ensure atomic updates\n            retries = 0;\n            while(retries < maxRetries){\n                try {\n                    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)(userRef, {\n                        workouts,\n                        lastUpdated: new Date().toISOString()\n                    });\n                    console.log(\"[Firebase] User document updated successfully\");\n                    break;\n                } catch (updateError) {\n                    retries++;\n                    console.warn(`[Firebase] Error updating user document (attempt ${retries}/${maxRetries}):`, updateError);\n                    if (retries >= maxRetries) throw updateError;\n                    await new Promise((resolve)=>setTimeout(resolve, 1000));\n                }\n            }\n            // Update user's fitness level\n            if (profileResult.success && profileResult.profile) {\n                console.log(\"[Firebase] Updating fitness level\");\n                try {\n                    await updateFitnessLevel(userId, profileResult.profile.fitnessLevel || 0);\n                    console.log(\"[Firebase] Fitness level updated\");\n                } catch (fitnessError) {\n                    console.warn(\"[Firebase] Error updating fitness level (non-critical):\", fitnessError);\n                }\n            }\n            // Verify the update was successful by reading back the data\n            const verifyDoc = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDoc)(userRef);\n            if (verifyDoc.exists()) {\n                const verifyData = verifyDoc.data();\n                if (verifyData.workouts && verifyData.workouts.length > 0) {\n                    console.log(\"[Firebase] Verified workout data was saved successfully\");\n                    return {\n                        success: true,\n                        workoutId\n                    };\n                } else {\n                    console.warn(\"[Firebase] Workout data might not have been saved correctly\");\n                    return {\n                        success: true,\n                        warning: \"Data might not have been saved correctly\",\n                        workoutId\n                    };\n                }\n            }\n            return {\n                success: true,\n                workoutId\n            };\n        } catch (updateError) {\n            console.error(\"[Firebase] Error updating user document:\", updateError);\n            return {\n                success: false,\n                error: `Failed to update user document: ${updateError.message}`\n            };\n        }\n    } catch (error) {\n        console.error(\"[Firebase] Error saving workout:\", error);\n        // Try to save to localStorage as fallback\n        try {\n            console.log(\"[Firebase] Attempting to save to localStorage as fallback\");\n            const workoutData = {\n                userId,\n                date,\n                results,\n                summaryData,\n                timestamp: new Date().toISOString()\n            };\n            // Get existing backup data or initialize\n            const existing = localStorage.getItem(\"workoutBackup\") || \"[]\";\n            const backupData = JSON.parse(existing);\n            backupData.push(workoutData);\n            // Save back to localStorage\n            localStorage.setItem(\"workoutBackup\", JSON.stringify(backupData));\n            console.log(\"[Firebase] Workout data saved to localStorage as backup\");\n            return {\n                success: false,\n                error: `${error.message} (But data was backed up locally)`,\n                fallbackUsed: true\n            };\n        } catch (fallbackError) {\n            console.error(\"[Firebase] Failed to save fallback data:\", fallbackError);\n            return {\n                success: false,\n                error: error.message\n            };\n        }\n    }\n};\n// Helper function to format duration in seconds to readable format\nfunction formatDuration(seconds) {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}m ${remainingSeconds}s`;\n}\nconst getUserWorkouts = async (userId)=>{\n    try {\n        console.log(\"[Firebase] Getting workouts for user:\", userId);\n        if (!userId) {\n            console.error(\"[Firebase] getUserWorkouts called with empty userId\");\n            return {\n                success: false,\n                error: \"User ID is required\",\n                workouts: []\n            };\n        }\n        if (!db) {\n            console.error(\"[Firebase] Firestore not initialized in getUserWorkouts\");\n            return {\n                success: false,\n                error: \"Firebase not initialized\",\n                workouts: []\n            };\n        }\n        // Try multiple approaches to get the workout data\n        let allWorkouts = [];\n        let errors = [];\n        // Approach 1: Check direct workouts collection\n        try {\n            console.log(\"[Firebase] Checking workouts collection...\");\n            const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.collection)(db, \"workouts\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.where)(\"userId\", \"==\", userId));\n            const workoutsSnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDocs)(q);\n            if (!workoutsSnapshot.empty) {\n                const directWorkouts = workoutsSnapshot.docs.map((doc)=>doc.data());\n                console.log(`[Firebase] Found ${directWorkouts.length} workouts in workouts collection`);\n                allWorkouts = [\n                    ...allWorkouts,\n                    ...directWorkouts\n                ];\n            } else {\n                console.log(\"[Firebase] No workouts found in workouts collection\");\n            }\n        } catch (directError) {\n            console.error(\"[Firebase] Error fetching from workouts collection:\", directError);\n            errors.push(`Error fetching from workouts collection: ${directError.message}`);\n        }\n        // Approach 2: Check user-workouts subcollection\n        try {\n            console.log(\"[Firebase] Checking user workouts subcollection...\");\n            const userWorkoutsRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.collection)(db, `users/${userId}/workouts`);\n            const userWorkoutsSnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDocs)(userWorkoutsRef);\n            if (!userWorkoutsSnapshot.empty) {\n                const subcollectionWorkouts = userWorkoutsSnapshot.docs.map((doc)=>doc.data());\n                console.log(`[Firebase] Found ${subcollectionWorkouts.length} workouts in user subcollection`);\n                // Filter out any duplicates (by workoutId) that might already be in allWorkouts\n                const newWorkouts = subcollectionWorkouts.filter((newWorkout)=>!allWorkouts.some((existing)=>existing.workoutId === newWorkout.workoutId));\n                allWorkouts = [\n                    ...allWorkouts,\n                    ...newWorkouts\n                ];\n            } else {\n                console.log(\"[Firebase] No workouts found in user subcollection\");\n            }\n        } catch (subcollectionError) {\n            console.error(\"[Firebase] Error fetching from user workouts subcollection:\", subcollectionError);\n            errors.push(`Error fetching from user workouts subcollection: ${subcollectionError.message}`);\n        }\n        // Approach 3: Check the original storage location (user document's workouts array)\n        try {\n            console.log(\"[Firebase] Checking user document for workouts array...\");\n            const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(db, \"users\", userId);\n            const userDoc = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDoc)(userRef);\n            if (userDoc.exists()) {\n                const userData = userDoc.data();\n                if (userData.workouts && Array.isArray(userData.workouts) && userData.workouts.length > 0) {\n                    console.log(`[Firebase] Found ${userData.workouts.length} workouts in user document`);\n                    // Filter out any duplicates by workoutId if it exists, otherwise by date\n                    const newWorkouts = userData.workouts.filter((newWorkout)=>{\n                        if (newWorkout.workoutId) {\n                            return !allWorkouts.some((existing)=>existing.workoutId === newWorkout.workoutId);\n                        } else {\n                            return !allWorkouts.some((existing)=>existing.date === newWorkout.date);\n                        }\n                    });\n                    allWorkouts = [\n                        ...allWorkouts,\n                        ...newWorkouts\n                    ];\n                } else {\n                    console.log(\"[Firebase] No workouts found in user document\");\n                }\n            } else {\n                console.log(\"[Firebase] User document not found, skipping workouts array check\");\n            }\n        } catch (userDocError) {\n            console.error(\"[Firebase] Error fetching from user document:\", userDocError);\n            errors.push(`Error fetching from user document: ${userDocError.message}`);\n        }\n        // Return results\n        console.log(`[Firebase] Total workouts found across all locations: ${allWorkouts.length}`);\n        if (allWorkouts.length === 0 && errors.length > 0) {\n            // If we found no workouts and had errors, try checking localStorage backup\n            console.log(\"[Firebase] No workouts found in Firestore, checking backup in localStorage\");\n            try {\n                const workoutBackups = localStorage.getItem(\"workoutBackups\");\n                if (workoutBackups) {\n                    const backupData = JSON.parse(workoutBackups);\n                    const userBackups = backupData.filter((workout)=>{\n                        return workout.userId === userId || workout.results && workout.results.length > 0;\n                    });\n                    if (userBackups.length > 0) {\n                        console.log(`[Firebase] Found ${userBackups.length} workouts in localStorage backup`);\n                        return {\n                            success: true,\n                            workouts: userBackups,\n                            warnings: [\n                                \"Using workout data from localStorage backup\",\n                                ...errors\n                            ]\n                        };\n                    }\n                }\n            } catch (backupError) {\n                console.error(\"[Firebase] Error checking localStorage backup:\", backupError);\n            }\n            return {\n                success: false,\n                error: \"Failed to retrieve workouts from all sources\",\n                details: errors,\n                workouts: []\n            };\n        }\n        // Sort workouts by date (newest first)\n        const sortedWorkouts = [\n            ...allWorkouts\n        ].sort((a, b)=>{\n            // If timestamp exists, use it for most accurate sorting\n            if (a.createdAt && b.createdAt) {\n                return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n            }\n            // Otherwise fall back to date\n            return new Date(b.date).getTime() - new Date(a.date).getTime();\n        });\n        // Log the dates of the workouts to help debug\n        if (sortedWorkouts.length > 0) {\n            console.log(\"[Firebase] Workout dates:\", sortedWorkouts.map((w)=>w.date).join(\", \"));\n        }\n        return {\n            success: true,\n            workouts: sortedWorkouts,\n            warnings: errors.length > 0 ? errors : undefined\n        };\n    } catch (error) {\n        console.error(\"[Firebase] Error getting workouts:\", error);\n        // Try to check for backup data in localStorage\n        try {\n            const backupData = localStorage.getItem(\"workoutBackup\");\n            if (backupData) {\n                const parsedBackup = JSON.parse(backupData);\n                const userBackups = parsedBackup.filter((item)=>item.userId === userId);\n                if (userBackups.length > 0) {\n                    console.log(\"[Firebase] Found backup workout data in localStorage:\", userBackups.length);\n                    return {\n                        success: true,\n                        workouts: userBackups.map((item)=>({\n                                date: item.date,\n                                results: item.results,\n                                summary: item.summaryData\n                            })),\n                        usingBackup: true\n                    };\n                }\n            }\n            // Also check the other backup format\n            const workoutBackups = localStorage.getItem(\"workoutBackups\");\n            if (workoutBackups) {\n                const parsedWorkoutBackups = JSON.parse(workoutBackups);\n                if (parsedWorkoutBackups.length > 0) {\n                    console.log(\"[Firebase] Found backup workout data in workoutBackups:\", parsedWorkoutBackups.length);\n                    return {\n                        success: true,\n                        workouts: parsedWorkoutBackups,\n                        usingBackup: true\n                    };\n                }\n            }\n        } catch (backupError) {\n            console.error(\"[Firebase] Error checking backup data:\", backupError);\n        }\n        return {\n            success: false,\n            error: error.message,\n            workouts: []\n        };\n    }\n};\n// Function to calculate calories burned based on exercise type, rep count, and user weight\nconst calculateCaloriesBurned = (exerciseType, reps, userWeight)=>{\n    if (exerciseType === \"workout_end\" || exerciseType === \"workout-end\") {\n        return 0; // No calories for workout end marker\n    }\n    // Base calories per rep for a person weighing 70kg\n    const caloriesPerRepBase = {\n        \"burpees\": 0.5,\n        \"squats\": 0.32,\n        \"high_knees\": 0.2,\n        \"mountain_climbers\": 0.25,\n        \"jumping_jacks\": 0.2\n    };\n    // Default to squats if exercise type not found\n    const caloriesPerRep = caloriesPerRepBase[exerciseType] || caloriesPerRepBase[\"squats\"];\n    // Adjust based on weight (simplified linear adjustment)\n    const weightFactor = userWeight / 70;\n    // Calculate total calories and round to 1 decimal place\n    return Math.round(caloriesPerRep * reps * weightFactor * 10) / 10;\n};\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/firebase.ts\n");

/***/ }),

/***/ "./src/pages/_app.tsx":
/*!****************************!*\
  !*** ./src/pages/_app.tsx ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/styles/globals.css */ \"./src/styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_AuthContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/AuthContext */ \"./src/lib/AuthContext.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_AuthContext__WEBPACK_IMPORTED_MODULE_2__]);\n_lib_AuthContext__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nfunction App({ Component, pageProps }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_lib_AuthContext__WEBPACK_IMPORTED_MODULE_2__.AuthProvider, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n            ...pageProps\n        }, void 0, false, {\n            fileName: \"D:\\\\Fitness App\\\\WEB APP\\\\src\\\\pages\\\\_app.tsx\",\n            lineNumber: 8,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"D:\\\\Fitness App\\\\WEB APP\\\\src\\\\pages\\\\_app.tsx\",\n        lineNumber: 7,\n        columnNumber: 5\n    }, this);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvX2FwcC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUE4QjtBQUVtQjtBQUVsQyxTQUFTQyxJQUFJLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFZO0lBQzVELHFCQUNFLDhEQUFDSCwwREFBWUE7a0JBQ1gsNEVBQUNFO1lBQVcsR0FBR0MsU0FBUzs7Ozs7Ozs7Ozs7QUFHOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9maXRuZXNzLXdlYi1hcHAvLi9zcmMvcGFnZXMvX2FwcC50c3g/ZjlkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ0Avc3R5bGVzL2dsb2JhbHMuY3NzJztcclxuaW1wb3J0IHR5cGUgeyBBcHBQcm9wcyB9IGZyb20gJ25leHQvYXBwJztcclxuaW1wb3J0IHsgQXV0aFByb3ZpZGVyIH0gZnJvbSAnQC9saWIvQXV0aENvbnRleHQnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXBwKHsgQ29tcG9uZW50LCBwYWdlUHJvcHMgfTogQXBwUHJvcHMpIHtcclxuICByZXR1cm4gKFxyXG4gICAgPEF1dGhQcm92aWRlcj5cclxuICAgICAgPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPlxyXG4gICAgPC9BdXRoUHJvdmlkZXI+XHJcbiAgKTtcclxufSAiXSwibmFtZXMiOlsiQXV0aFByb3ZpZGVyIiwiQXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pages/_app.tsx\n");

/***/ }),

/***/ "./src/styles/globals.css":
/*!********************************!*\
  !*** ./src/styles/globals.css ***!
  \********************************/
/***/ (() => {



/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "firebase/app":
/*!*******************************!*\
  !*** external "firebase/app" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = import("firebase/app");;

/***/ }),

/***/ "firebase/auth":
/*!********************************!*\
  !*** external "firebase/auth" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = import("firebase/auth");;

/***/ }),

/***/ "firebase/firestore":
/*!*************************************!*\
  !*** external "firebase/firestore" ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = import("firebase/firestore");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./src/pages/_app.tsx"));
module.exports = __webpack_exports__;

})();